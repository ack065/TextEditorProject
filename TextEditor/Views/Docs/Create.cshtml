@model TextEditor.Models.Doc
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager;
<!-- Injecting e kako tunel za funkcii od backend/modeli do frontend -->
@{
    ViewData["Title"] = "Create";
}


<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                
                <input asp-for="Title" class="form-control" value ="Untitled Document"/>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <textarea style="width: 60vw; height: 80vh" asp-for="Content" id="tiny"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                
                <input type = "hidden" asp-for="UserId" class="form-control" value="@userManager.GetUserId(User)"/>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
           

        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-info mt-3">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
